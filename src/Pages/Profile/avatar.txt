import React, { useState, useRef, useEffect } from "react";
import Avatar from "react-avatar-edit";
import axios from "axios";
import Modal from "../../Components/Modal/Modal.jsx";
import "./AvatarUpload.css";
import { toast } from "react-toastify";

const AvatarUpload = () => {
    const [preview, setPreview] = useState(null);
    const [src, setSrc] = useState(null);
    const [showForm, setShowForm] = useState(false);
    const fileInputRef = useRef(null);
    const [userImage, setUserImage] = useState(null);

    useEffect(() => {
        if (!showForm) {
            setPreview(null);
            setSrc(null);
        }
    }, [showForm]);

    useEffect(() => {
        const fetchProfileData = async () => {
            try {
                const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/auth/profile`, {
                headers: {
                    Authorization: `Bearer ${localStorage.getItem('token')}`,
                },
                });
                console.log(response.data.profile_image)
                setUserImage(response.data.profile_image);
            } catch (error) {
                console.error('Ошибка при получении изображения пользователя:', error);
            }
            };
        
            fetchProfileData();
        }, [userImage]);

    const onClose = () => {
        setShowForm(false);
    };

    const onCrop = (view) => {
        setPreview(view);
    };

    const onBeforeFileLoad = (elem) => {
        if (elem.target.files[0].size > 2000000) {
            // Check file size (<2000kb)
            toast.warning("Файл завеликий! Обмеження до 2 мб.");
            elem.target.value = "";
        }
    };

    const handleSubmit = async (event) => {
        event.preventDefault();

        if (!preview) {
            toast.warning("Спочатку виберіть і обріжте зображення");
            return;
        }

        const blob = await fetch(preview).then((res) => res.blob());
        const formData = new FormData();
        formData.append("avatar", blob, "avatar.png");

        try {
            const response = await axios.post(
                `${process.env.REACT_APP_SERVER_URL}/auth/change-image`,
                formData,
                {
                    headers: {
                        Authorization: `Bearer ${localStorage.getItem('token')}`,
                    }
                }
            );
            console.log(response.data);
            toast.success("Аватар успішно завантажено. Щоб побачити зміни, авторизуйтесь знову.");
        } catch (error) {
            console.error("Error uploading avatar:", error);
            toast.error("Помилка завантаження аватара");
        }
    };

    const handleFileInputClick = () => {
        fileInputRef.current.click();
    };

    return (
        <div className="user-img">
            <button className="upload-btn cl-1" onClick={() => setShowForm(true)}>
                <div className="user-image-text">Завантажте аватар</div>
                {userImage && ( 
                    <img src={userImage} className="user-avatar" alt="User Avatar" />
                )}
            </button>
            
            <Modal isOpen={showForm} onClose={onClose}>
                <input
                    type="file"
                    ref={fileInputRef}
                    style={{ display: "none" }}
                    onChange={(e) => setSrc(URL.createObjectURL(e.target.files[0]))}
                />
                <Avatar
                    label="Виберіть файл"
                    labelStyle={{
                        fontSize: "30px",
                    }}
                    width={390}
                    height={295}
                    onCrop={onCrop}
                    onClose={onClose}
                    onBeforeFileLoad={onBeforeFileLoad}
                    src={src}
                    lineWidth={1}
                    minCropRadius={50}
                    cropRadius={100}
                />
                {preview && (
                    <>
                        <img src={preview} alt="Avatar Preview" width="100" />
                    </>
                )}
                
                <button className="main-btn mt-1" onClick={handleSubmit}>
                    Upload
                </button>
            </Modal>
            
        </div>
    );
};

export default AvatarUpload;
